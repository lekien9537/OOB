get_info()
{

    while [[ $# > 0 ]]; do
        key="$1"
        shift
        case $key in
            -c|--community)
            local community="$1"
            shift
            ;;
            -ip|--ipaddress )
            local ip="$1"
            shift
            ;;
            -oid|--oid )
            local oid="$1"
            shift
            ;;
            -ck|--check )
            local ck="true"
            ;;
            -m|--map )
            local map="$@"
            shift
            ;;
            *)   
            ;;
        esac
    done

    local rs="N/A"
    local check=""



    if [ "$ck" = "true" ]
    then

        rs=""
        rs=`snmpwalk -On -v1 -c $community $ip $oid | head -n 2`
        check=`echo ${rs[@]} | grep "$oid.*="`


        if [ -z "$check" ]
        then
            msg -m "${rs[@]}"
            echo "false"
        else
            echo "true"
        fi

        
    else

        rs=($(snmpwalk -v1 -c $community $ip $oid | cut -d ":" -f 2))
        
        local mac=($(echo -e "${rs[@]}" | grep -E "^([A-Z0-9]{2}[:-\ ]){5}([A-Z0-9]{2})*"))


        if [[ ${rs[@]} == *'"'* ]]; then
            IFS=$'\n' read -ra rs <<< "${rs[@]}"
            #rs=${rs//""/}
            IFS=$'\"' read -ra rs <<< "${rs[@]}"
            #rs=${rs//[[:blank:]]/}      
        
        elif [ "$mac" ]; then
              
            local tmp_str=""
            local rsLen=${#rs[@]}
            local j=0

            for (( i=0; i<${rsLen}; i++ ));
            do
                if [[ $(( ($i+1) % 6 )) == 0 ]];then
                    tmp_str=$tmp_str"${rs[$i]}"
                else
                    tmp_str=$tmp_str"${rs[$i]}:"
                fi
                
                if [[ $(( ($i+1) % 6 )) == 0 ]] && [[ (($i != 0)) ]]; then
                    echo -e "${map[0]} (s$j): $tmp_str"
                    ((j=j+1))
                    tmp_str=""
                fi
                               
            done

        else
            IFS=$' ' read -ra rs <<< "${rs[@]}"
        fi

        IFS=$' ' read -ra map <<< "$map"

        local num=0

        for i in "${!rs[@]}"; do

            local tmp=${rs[$i]}

            if ! [ ! -z "$tmp" -a "$tmp" != " " ]
            then
                continue
            fi

            
            if [[ ${#tmp} -lt 3 ]] && [[ "${#map[@]}" -gt 2 ]] ; then
                
                local k=($(echo ${map[$tmp]} | sed 's/_/ /g'))
                if [[ ${map[0]} == *'OVERALL'* ]]; then
                    echo -e "${map[0]}: ${k[@]}"
                else
                    echo -e "${map[0]} (s$num): ${k[@]}"
                fi
            else
                if [ -z "$mac" ]; then
                    if [[ ${map[0]} == *'OVERALL'* ]]; then
                        echo -e "${map[0]}: $tmp"
                    else
                        echo -e "${map[0]} (s$num): $tmp"
                    fi
                    
                fi
            fi

            num=$((num+1))

        done

        

    fi

    

}




